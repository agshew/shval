#!/usr/bin/env Rscript

argv <- commandArgs(TRUE)

usage <- function() {
	print("Usage: plot* <data>")
	quit()
}

if (length(argv) < 1) {
	usage()
}

argv <- commandArgs(TRUE)

library(ggplot2)

# without data.table
hist <- read.table(argv[1], header=TRUE, stringsAsFactors=FALSE)

# data.table seems to have issues
#library(data.table)
#hist <- fread(argv[1], header=TRUE, stringsAsFactors=FALSE)

#summary(hist)

da <- aggregate(x = as.numeric(hist$Count), by = list(hist$Value), FUN=sum)
colnames(da) <- c("Value", "Count")
total <- sum(da$Count)
da$Fraction <- da$Count / total
da$Percent <- sprintf("%.9f", da$Fraction * 100)
da <- da[da$Count > 0, ]
da <- da[order(da$Count),]
print(da, row.names=FALSE)

myBreaks <- function(x){
	breaks <- c(	min(x),
			quantile(x, c(0.10)),
			quantile(x, c(0.20)),
			quantile(x, c(0.30)),
			quantile(x, c(0.40)),
			quantile(x, c(0.50)),
			quantile(x, c(0.60)),
			quantile(x, c(0.70)),
			quantile(x, c(0.80)),
			quantile(x, c(0.90)),
			max(x))
	names(breaks) <- c(	paste(min(x)),
				paste(quantile(x, c(0.10))),
				paste(quantile(x, c(0.20))),
				paste(quantile(x, c(0.30))),
				paste(quantile(x, c(0.40))),
				paste(quantile(x, c(0.50))),
				paste(quantile(x, c(0.60))),
				paste(quantile(x, c(0.70))),
				paste(quantile(x, c(0.80))),
				paste(quantile(x, c(0.90))),
				paste(max(x)))
	breaks
}

plot_hist <- function(name, h, xmin, xmax, ysqrt=FALSE){
	plot_1 = ggplot() +
		geom_bar(data=h, aes(x=Value, y=Count, fill=Ops), stat="identity", position="stack") +
		ggtitle(paste("Counts of Numbers in", argv[1])) +
		xlab("Value") +
		ylab("Count") +
		scale_x_continuous(breaks=myBreaks, expand=c(0, 0), limits=c(xmin, xmax)) +
		#theme with white background
		theme_bw() +
		#eliminates background, gridlines, and chart border
		theme(
		plot.background = element_blank()
		,panel.grid.major = element_blank()
		,panel.grid.minor = element_blank()
		,panel.border = element_blank()
		) +
	
		#draws x and y axis line
		theme(axis.line = element_line(color = 'black')) +
	
		theme(axis.text.x = element_text(angle=90, hjust=0.5, vjust=0.5, size=6))

	if (ysqrt == TRUE) {
		plot_1 = plot_1 +
			scale_y_sqrt() +
			ylab("sqrt Count")
		name <- paste(name, "-ysqrt", sep="")
	}

	ggsave(filename=paste(argv[1], "-", name, ".png", sep=""), plot=plot_1, height=5, width=11)
	rm(plot_1)
}

xmin <- min(hist$Value)
xmax <- max(hist$Value)

if (xmin >= -1 && xmax <= 1) {
	neg <- hist[ which(hist$Value >= -1 & hist$Value <= -0.5), ]
	print(paste("negative", summary(neg)))
	plot_hist("negative", neg, -1, -0.48)
	pos <- hist[ which(hist$Value >= 0.5 & hist$Value <= 1), ]
	print(paste("positive", summary(pos)))
	plot_hist("positive", pos, 0.48, 1)
}

plot_hist("all", hist, xmin, xmax)

plot_hist("all", hist, xmin, xmax, ysqrt=TRUE)

nzhist <- hist[hist$Value != 0, ]
plot_hist("nonzero", nzhist, xmin, xmax)

nz1hist <- nzhist[nzhist$Value != 1, ]
plot_hist("nonzero-one", nz1hist, xmin, xmax)

nz1halfhist <- nz1hist[nz1hist$Value != 0.5, ]
plot_hist("nonzero-one-half", nz1halfhist, xmin, xmax)
